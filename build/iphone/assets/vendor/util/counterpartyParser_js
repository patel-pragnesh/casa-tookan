
module.exports=function(){

function CounterpartyParser(){}
var



txObject,






includedInput,
includedInputAmount,

newTx,
sourceAddress,
bumbFeeCallback,cplib=require('vendor/util/cplib'),tools=require('vendor/util/bitcoinJSLib'),bitcoin=tools.bitcoin,crypto=bitcoin.crypto,UTXOSs=[],spentUTXOSs=[],inputAmount=0,outputAmount=0,fee=0,increase=0,newInputAmount=0;
























































































































































return CounterpartyParser.prototype.checkSendTransaction=function(unsignedtx,source,destination,token,amount,divisible){divisible&&(amount*=1e8);var jsonData=parse(unsignedtx);if('Enhanced Send'!=jsonData.type)return console.log('e-1'),!1;if(source!=jsonData.destination.address)return console.log('e0 '+source+' '+jsonData.destination.address),!1;var destinationAddress=jsonData.data.destination,network=destinationAddress.substr(0,2),pubkeyhash=destinationAddress.substr(2,40),address=bitcoin.address.toBase58Check(tools.buffer(pubkeyhash,'hex'),parseInt(network));return destination==address?token==jsonData.data.asset_id?amount==jsonData.data.quantity?(console.log('e4'),!0):(console.log('e3 '+amount+' '+jsonData.data.quantity),!1):(console.log('e2'),!1):(console.log('e1'),!1)},CounterpartyParser.prototype.checkOrderTransaction=function(unsignedtx,address,get_token,get_quantity,give_token,give_quantity,getDivisible,giveDivisible){getDivisible&&(get_quantity*=1e8),giveDivisible&&(give_quantity*=1e8);var jsonData=parse(unsignedtx);return'Order'==jsonData.type&&address==jsonData.destination.address&&(get_token==jsonData.data.get_id?give_token==jsonData.data.give_id&&(get_quantity==jsonData.data.get_quantity?give_quantity==jsonData.data.give_quantity||(console.log(give_quantity+' '+jsonData.data.give_quantity),!1):(console.log(get_quantity+' '+jsonData.data.get_quantity),!1)):(console.log(get_token+' '+jsonData.data.get_id),!1))},CounterpartyParser.prototype.checkCancelTransaction=function(unsignedtx){var jsonData=parse(unsignedtx);return'Cancel'==jsonData.type},CounterpartyParser.prototype.decode=function(rawtx){return parse(rawtx)},parse=function(rawtx){var network='mainnet',rawdata=[],txObj=bitcoin.Transaction.fromHex(rawtx),cpDataCount=0,destination=null,rawdata=tools.buffer.alloc(0),key=tools.bufferReverse(txObj.ins[0].hash);txObj.outs.forEach(function(out,idx){var type=bitcoin.script.classifyOutput(out.script);if('pubkeyhash'!=type||destination||(destination={address:bitcoin.address.toBase58Check(out.script.slice(3,23),{mainnet:0,testnet:111}[network]),amount:out.value}),'nulldata'==type&&(cpDataCount++,rawdata=cplib.counterjs.util.arc4(key,bitcoin.script.decompile(out.script)[1])),'multisig'==type){cpDataCount++;var decrypted=cplib.counterjs.util.arc4(key,Buffer.concat([out.script.slice(3,33),out.script.slice(36,68)]));rawdata=Buffer.concat([rawdata,decrypted.slice(1,1+decrypted[0])])}});var message;try{message=cplib.counterjs.Message.fromSerialized(rawdata)}catch(e){console.log('error'+e)}var jsonMessage=message.toJSON();return jsonMessage.destination=destination,1<cpDataCount?[]:jsonMessage},new CounterpartyParser;
}();